
1. What is responsible for defining the routes of the `games` resource?

- The server in the create_router.js file

2. What do you notice about the folder structure?  Whats the client responsible for? Whats the server responsible for?

- The server is responsible for defining the routes of the resources and updating the database. (back-end)
- The client is responsible for rendering the data to the user coreectly based on the routes set. (front-end)


3. What are the the responsibilities of server.js?

- The responsibilities of server.js are to manage the exchange of data between the server and the client


4. What are the responsibilities of the `gamesRouter`?

- To handle


5. What process does the the client (front-end) use to communicate with the server?

- A fetch request 


6. What optional second argument does the `fetch` method take? And what is it used for in this application? Hint: See [Using Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch) on the MDN docs

- A condiguration object that we can change 


7. Which of the games API routes does the front-end application consume (i.e. make requests to)?

- get / post / delete


8. What are we using the [MongoDB Driver](http://mongodb.github.io/node-mongodb-native/) for?

- Allows us to communicate with the database